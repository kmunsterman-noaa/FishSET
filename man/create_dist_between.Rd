% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_variables.R
\name{create_dist_between}
\alias{create_dist_between}
\title{Distance between two points}
\usage{
create_dist_between(
  dat,
  start,
  end,
  units = c("miles", "meters", "km", "midpoint")
)
}
\arguments{
\item{dat}{Main data frame over which to apply function. Table in fishset_db database should contain the string `MainDataTable`.}

\item{start}{Starting location. Should be a port, lat/long location, or the centroid of zonal assignment. If port is desired, start should be the vector name containing the port name. Latitude and longitude for the port are extracted from the port table. If a lat, long location is desired then start should be specified as c(name of lon vector, name of lat vector). The order must be lon, lat. If the center point of the fishing zone or area is to be used then start should be 'centroid'.}

\item{end}{Ending location. Should be a port, lat/long location, or the centroid of the fishing zone or area. If port is desired, end should be the vector name containing the port name. Latitude and longitude for the port are extracted from the port table. If a lat, long location is desired then end should be specified as c(name of lat vector, name of lon vector). If the center point of the fishing zone or area is to be used then end should be 'centroid'.}

\item{units}{Unit of measurement for calculated distance between start and ending points. Can be in miles, meters, kilometers, or midpoint location}
}
\description{
Creates a vector of distance between two points. The start and end points must be different vectors. If the start or ending points are from a port or the center of a fishing zone or area, then a prompt will appear asking for further parameters to be specified. If the starting or ending points are a port, then latitude and longitude are extracted from the port table stored in the fishset_db database.  In this case, PortTable must be specified.  If the starting or ending points are the center of the fishing zone or area, then the assignment_column function will be called to assign each observation to a zone. The find_centroid function will then be called to determine the centroid of each zone. Distance measurements will be between these centroids.
}
\details{
\tabular{rlll}{
portTable: \tab Port table from fishset_db database. Required if start or end is a port vector. \cr
gridfile: \tab patial data set Can be shape file data frame or list. Required if start or end is centroid. \cr 
lon.dat: \tab Longitude of points from dataset. Required if start or end is centroid. \cr 
lat.dat: \tab Latitude of points from dataset. Required if start or end is centroid. \cr
lon.grid: \tab Longitude of points from gridfile. Required if start or end is centroid. \cr 
lat.grid: \tab Longitude of points from gridfile. Required if start or end is centroid. \cr
cat: \tab Variable defining the individual areas or zones. Required if start or end is centroid. \cr 
}
}
\examples{
\dontrun{
MainDataTable$DistCentPort <- create_dist_between(MainDataTable,'centroid','EMBARKED_PORT', 
                                                 units='miles')
MainDataTable$DistLocLock <- create_dist_between(MainDataTable,c('LonLat_START_LON',
                  'LonLat_START_LAT'),c('LonLat_END_LON','LonLat_END_LAT'), units='midpoint')
MainDataTable$DistPortPort <- create_dist_between(MainDataTable,'DISEMBARKED_PORT',
                                     'EMBARKED_PORT', units='meters')
}
}
