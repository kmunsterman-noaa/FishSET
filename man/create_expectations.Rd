% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_expectations.R
\name{create_expectations}
\alias{create_expectations}
\title{Create expected catch/expected revenue matrix}
\usage{
create_expectations(
  dat,
  project,
  name,
  catch,
  price = NULL,
  defineGroup = NULL,
  temp_var = NULL,
  temporal = "daily",
  calc_method = "standardAverage",
  temp_window = 7,
  day_lag = 1,
  year_lag = 0,
  empty_catch = NULL,
  empty_expectation = 1e-04,
  dummy_exp = FALSE,
  weight_avg = FALSE,
  outsample = FALSE
)
}
\arguments{
\item{dat}{Primary data containing information on hauls or trips. Table in FishSET 
database contains the string 'MainDataTable'.}

\item{project}{String, name of project.}

\item{name}{Name of the expected matrix to be saved}

\item{catch}{Variable from \code{dat} containing catch data.}

\item{price}{Optional, variable from \code{dat} containing price/value data.
Price is multiplied against \code{catch} to generated revenue. If revenue exists 
in \code{dat} and you wish to use this revenue instead of price, then \code{catch} 
must be a vector of 1 of length equal to \code{dat}. Defaults to \code{NULL}.}

\item{defineGroup}{Optional, variable from \code{dat} that defines how to split 
the fleet. Defaults to treating entire dataframe \code{dat} as a fleet.}

\item{temp_var}{Optional, temporal variable from \code{dat}. Set to \code{NULL} 
if temporal patterns in catch should not be considered.}

\item{temporal}{String, choices are \code{"daily"} or \code{"sequential"}. Should 
time, if \code{temp_var} is defined, be included as a daily timeline or sequential 
order of recorded dates. For daily, catch on dates with no record are filled 
with \code{NA}. The choice affects how the rolling average is calculated. If 
temporal is daily then the window size for average and the temporal lag are 
in days. If sequential, then averaging will occur over the specified number 
of observations, regardless of how many days they represent.}

\item{calc_method}{String, how catch values are average over window size. Select 
standard average (\code{"standardAverage"}), simple lag regression of means 
(\code{"simpleLag"}), or weights of regressed groups (\code{"weights"})}

\item{temp_window}{Numeric, temporal window size. If \code{temp_var} is not \code{NULL}, 
set the window size to average catch over. Defaults to 14 (14 days if \code{temporal} 
is \code{"daily"}).}

\item{day_lag}{Numeric, temporal lag time. If \code{temp_var} is not \code{NULL}, 
how far back to lag \code{temp_window}.}

\item{year_lag}{If expected catch should be based on catch from previous year(s), 
set \code{year_lag} to the number of years to go back.}

\item{empty_catch}{String, replace empty catch with \code{NA}, \code{0}, mean 
of all catch (\code{"allCatch"}), or mean of grouped catch (\code{"groupCatch"}).}

\item{empty_expectation}{Numeric, how to treat empty expectation values. Choices 
are to not replace (\code{NULL}) or replace with 0.0001 or 0.}

\item{dummy_exp}{Logical, should a dummy variable be created? If \code{TRUE}, 
output dummy variable for originally missing value. If \code{FALSE}, no dummy 
variable is outputted. Defaults to \code{FALSE}.}

\item{weight_avg}{Logical, if \code{TRUE} then all observations for a given zone on a 
given date will be included when calculating the mean, thus giving more 
weight to days with more observations in a given zone. If \code{FALSE}, then the 
daily mean for a zone will be calculated prior to calculating the mean across the
time window.}

\item{outsample}{Logical, if \code{TRUE} then generate expected catch matrix for 
out-of-sample data. If \code{FALSE} generate for primary data table. Defaults to
\code{outsample = FALSE}}
}
\value{
Function saves a list of expected catch matrices to the FishSET database
  as \code{projectExpectedCatch}. The list includes 
  the expected catch matrix from the user-defined choices. Multiple expected catch cases 
  can be added to the list by specifying unique names. The list is automatically saved to 
  the FishSET database and is called in \code{\link{make_model_design}}. The expected catch 
  output does not need to be loaded when defining or running the model.
}
\description{
Create expected catch or expected revenue matrix. The matrix is required for 
the \code{\link{logit_c}} model. Multiple matrices (with unique names) can be saved in a 
project.
}
\details{
Function creates an expectation of catch or revenue for alternative 
  fishing zones (zones where they could have fished but did not). The output is 
  saved to the FishSET database and called by the \code{\link{make_model_design}} 
  function. \code{\link{create_alternative_choice}} must be called first as observed 
  catch and zone inclusion requirements are defined there.\cr 
  The primary choices are whether to treat data as a fleet or to group the data 
  (\code{defineGroup}) and the time frame of catch data for calculating expected catch. 
  Catch is averaged along a daily or sequential timeline (\code{temporal}) using a rolling 
  average. \code{temp_window} and \code{day_lag} determine the window size and temporal 
  lag of the window for averaging. Use \code{\link{temp_obs_table}} before using 
  this function to assess the availability of data for the desired temporal moving 
  window size. Sparse data is not suited for shorter moving window sizes. For very 
  sparse data, consider setting \code{temp_var} to \code{NULL} and excluding 
  temporal patterns in catch. \cr
  Empty catch values are considered to be times of no fishing activity. Values 
  of 0 in the catch variable are considered times when fishing activity occurred 
  but with no catch. These points are included in the averaging and dummy creation 
  as points in time when fishing occurred. \cr
}
\examples{
\dontrun{
create_expectations(pollockMainDataTable, "pollock", "exp1", "OFFICIAL_TOTAL_CATCH_MT",
  price = NULL, defineGroup = "fleet", temp_var = "DATE_FISHING_BEGAN",
  temporal = "daily", calc_method = "standardAverage", 
  empty_catch = "allCatch", empty_expectation = 0.0001, temp_window = 4,
  day_lag = 2, year_lag = 0, dummy_exp = FALSE, 
  weight_avg = FALSE, outsample = FALSE
)
}

}
