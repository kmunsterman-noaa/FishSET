% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_model_design.R
\name{make_model_design}
\alias{make_model_design}
\title{Make model design}
\usage{
make_model_design(dataset, catchID, alternativeMatrix = c("loaded data",
  "gridded data"), lon.dat, lat.dat, indeVarsForModel = "",
  gridVariablesInclude = "", priceCol = NULL, vesselID = NULL,
  project)
}
\arguments{
\item{dataset}{dataframe or matrix}

\item{catchID}{Name of variable that containts catch data such as 'HAUL'}

\item{alternativeMatrix}{Whether the alternative choice matrix should come from 'loaded data' or 'gridded data'}

\item{lon.dat}{Variable containing longitude data}

\item{lat.dat}{Variable containing latitude data}

\item{indeVarsForModel}{Independent variables to include in the model}

\item{gridVariablesInclude}{Variables from gridded dataset to include in the model.}

\item{priceCol}{NULL If required, specify which variable contains price data}

\item{vesselID}{NULL If required, specify which varible defines vessel}

\item{project}{Project name. For naming output saved in sql database}
}
\value{
ModelInputData a list containing information on alternative choice
}
\description{
Make model design
}
\details{
Functions returns model design matrix. Calls the create_centroid function to generate Lat/Lon centroid of zones or areas.
Also calls the Alternative Choice functions which defines alternative fishing options.
#outputs:                                                                                                                                                                                                                   
    modelInputData <- list(
    catch=catch, #vector of data defined my uses as containing catch data 
    scales= c(catch=yscale, zonal=mscale, data=dscale),   # scale vectors to put catch data, zonal data, and other data to same scale   
    zonalChoices <- X, # area choice from data
    instances, dim(zonalChoices)[1],  #number of observations
    alts <- dim(zonalChoices)[2], #number of alternative zones
    epmDefaultPrice <- epmDefaultPrice,    #Price data is user-defined                                                                                                                                                                               
    dataZoneTrue <- dataZoneTrue,  #Vector of 0/1 indicating whether the data from taht zone is to be included.
    numOfNecessary <- Alt$numOfNecessary,  # # of hauls/trips per zone                                                                                                                                                   
    typeOfNecessary <- Alt$zoneType,  #haul or trip                                                                                                                                                                         
    altChoiceType <- altChoiceType, # function choice                                                                                                                                                                      
    altChoiceUnits <- altChoiceUnits, # units of X                                                                                                                                                                         
    altToLocal1 <- altToLocal1,   #Defines how starting points (Lat/Lon) are defined. Can be zonal centroid, port, etc                                                                                                                                                                                     
    altToLocal2 <- altToLocal2,   #Defines how end points (Lat/Lon) are defined
    bCHeader <-  bCHeader,  #Variables to include in the model, includes independent variables and interactions                                                                                                                                                                                             
    bColumnsWant <- bColumnsWant ,                                                                                                                                                                                        
    bInterAct <- bInterAct,                                                                                                                                                                                               
    msq <-  msq,      
    gridVaryingVariables <- gridVaryingVariables,
    created <- Sys.time()                                                                                                                                                                        
    )
}
