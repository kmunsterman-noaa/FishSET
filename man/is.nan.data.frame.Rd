% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/checkModelData.R, R/nan_filter.R
\name{is.nan.data.frame}
\alias{is.nan.data.frame}
\title{Check model data. Save output.}
\usage{
\method{is.nan}{data.frame}(dataset)

\method{is.nan}{data.frame}(dataset)
}
\arguments{
\item{dataset}{input dataframe or matrix}

\item{uniqueID}{dataframe that contains information on each column of the dataset}

\item{save.file}{whether to save as sql table (sqlsave) or csv file (csvsave)}

\item{db.name}{names of sql database to save dataset into}

\item{save.name}{name for verified and saved data}

\item{dataset}{dataframe or matrix over which to check for NaNs}

\item{x}{column in dataframe over which to remove or replace NaNs}

\item{replace}{whether to (TRUE) or not to (FALSE) replace NaNs in a column. Defaults to FALSE.}

\item{remove}{whether to (TRUE) or not to (FALSE) remove all remove the entire row of the dataframe where NaN is present in a specified column. Defaults to FALSE.}

\item{rep.value}{value to replace all NaNs in a column. Defaults to the mean value of the column.}
}
\value{
Returns statements as to whether issues in the data may exist

Returns the modified dataframe
}
\description{
Contains one function that tests for NaNs, Inf, and that each row is unique. The function stops if an if statement does not pass.

Contains a function to identify which columns in a dataframe or matrix contain NaNs and a function to return a modified dataframe where NaNs
 have been replaced or removed.
}
\details{
Checks data to be used for modelling. Checks for presence of NaNs and Inf. The verified data will not saves unless no NaNs or infinite values in the dataset.
Verified data can then be saves as sql table or csv file.

nan_filter is composed of three functions. is.nan.data.frame is a modification to is.nan to allow for seeking any occurrences of NaNs in a dataframe.
is.nan only works on lists. na.identify is used to identify if NaNs exist in a dataframe and which dataframes they occur in.
It is intended to aid in deciding how to handle NaNs. nan.filter is the function use to replace or remove NaNs.
}
\examples{
checkModelData(MainDataTable, uniqueID='uniqueID_Code', db.name=testdb, save.name='modelData')

my.df <- data.frame(length=c(1, 2, 3,4), height=c(NaN, 2, NaN,10), age=c(1,2,4,6),ID=c('a',Inf,'c','d'),speed=c(NaN,NA,44,40))
nan.identify(my.df)
nan.filter(my.df, 'speed')
mod.dat <- nan.filter(my.df, 'speed', replace=T)
mod.dat <- nan.filter(my.df, 'speed', replace=T, rep.value=0)
mod.dat <- nan.filter(my.df, 'speed', remove=T)
}
\keyword{NaN}
