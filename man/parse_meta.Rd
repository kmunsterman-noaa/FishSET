% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parse_meta.R
\name{parse_meta}
\alias{parse_meta}
\title{Parse metadata from a data file}
\usage{
parse_meta(file, ..., simplify_meta = FALSE)
}
\arguments{
\item{file}{String, file path.}

\item{...}{Additional arguments passed to a parsing function based on file
extension. See below.}

\item{simplify_meta}{Logical, attempt to simplify the metadata output. This
uses \code{\link{simplify_list}}. This can be useful if metadata is not 
tabular.}
}
\description{
General purpose meta parsing function. \code{parse_meta} attempts to parse
a file based on its file extension.
}
\details{
Function supports xls, xlsx, csv, tsv, excel, json, and xlm extensions.
#' Extension-specific notes: \cr

 txt: \cr
 \verb{  }sep Field separator character. defaults to \code{comment = "#"}.\cr
  \verb{  }comment The comment character used to separate (or "comment-out") 
  the metadata from the data. Only text that has been commented-out will be read.\cr
  \verb{ }d_list Logical, is metadata stored as a description list (i.e. Field: value, value
  format). If a colon (":") is used after the field name set this to \code{TRUE}.

 xls, xlsx: \cr
  \verb{    }range The cell range to read from (e.g. "A1:C5"). See 
  \code{\link[readxl]{read_excel}} for more details.
}
\seealso{
\code{\link{parse_meta_delim}}, \code{\link{parse_meta_excel}}, 
  \code{\link{parse_meta_json}}, \code{\link{parse_meta_xml}}
}
